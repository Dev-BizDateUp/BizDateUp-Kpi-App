generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "env(DATABASE_URL)"
}

model departments {
  id           Int            @id @default(autoincrement())
  name         String         @unique(map: "unique_department_name")
  designations designations[]
  employees    employees[]
}

model designations {
  id            Int          @id @default(autoincrement())
  name          String       @unique(map: "unique_designation")
  department_id Int?
  departments   departments? @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employees     employees[]
  kpis          kpis[]
}

model employees {
  id             Int           @id @default(autoincrement())
  employee_id    String        @unique
  name           String
  department_id  Int?
  designation_id Int?
  company        String?
  employee_type  String?
  phone          String?
  email          String?
  image          String?
  status         String?
  departments    departments?  @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  designations   designations? @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kpi_values     kpi_values[]
}

model kpi_frequencies {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  kpi_periods kpi_periods[]
  kpis        kpis[]
}

model kpi_periods {
  id              Int              @id @default(autoincrement())
  frequency_id    Int?
  year            Int
  month           Int?
  week            Int?
  quarter         Int?
  kpi_frequencies kpi_frequencies? @relation(fields: [frequency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kpi_values      kpi_values[]
}

model kpi_values {
  id             Int          @id @default(autoincrement())
  kpi_id         Int?
  employee_id    Int?
  period_id      Int?
  value_achieved Float
  employees      employees?   @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kpis           kpis?        @relation(fields: [kpi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kpi_periods    kpi_periods? @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model kpis {
  id                  Int              @id @default(autoincrement())
  title               String
  description         String?
  frequency_id        Int?
  target              Float?
  threshold_red_min   Float?
  threshold_red_max   Float?
  threshold_amber_min Float?
  threshold_amber_max Float?
  threshold_green_min Float?
  threshold_green_max Float?
  designation_id      Int?
  kpi_values          kpi_values[]
  designations        designations?    @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kpi_frequencies     kpi_frequencies? @relation(fields: [frequency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}