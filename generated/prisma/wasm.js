
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DepartmentsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.DesignationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  department_id: 'department_id'
};

exports.Prisma.EmployeesScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  name: 'name',
  department_id: 'department_id',
  designation_id: 'designation_id',
  company: 'company',
  employee_type: 'employee_type',
  phone: 'phone',
  email: 'email',
  image: 'image',
  status: 'status',
  role_id: 'role_id'
};

exports.Prisma.Kpi_frequenciesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Kpi_periodsScalarFieldEnum = {
  id: 'id',
  frequency_id: 'frequency_id',
  year: 'year',
  month: 'month',
  quarter: 'quarter',
  start_date: 'start_date',
  end_date: 'end_date'
};

exports.Prisma.Kpi_valuesScalarFieldEnum = {
  id: 'id',
  kpi_id: 'kpi_id',
  employee_id: 'employee_id',
  period_id: 'period_id',
  value_achieved: 'value_achieved'
};

exports.Prisma.KpisScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  frequency_id: 'frequency_id',
  target: 'target',
  designation_id: 'designation_id',
  green_threshold: 'green_threshold',
  yellow_threshold: 'yellow_threshold'
};

exports.Prisma.CredentialsScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passhash: 'passhash'
};

exports.Prisma.Manager_reviewScalarFieldEnum = {
  id: 'id',
  review_date: 'review_date',
  manager_name: 'manager_name',
  employee_id: 'employee_id',
  summary_kpi: 'summary_kpi',
  strengths: 'strengths',
  improvement: 'improvement',
  comment: 'comment',
  actions: 'actions',
  goals: 'goals',
  rating: 'rating'
};

exports.Prisma.AppraisalScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  start: 'start',
  end: 'end',
  manager_name: 'manager_name',
  review_date: 'review_date',
  kpi_achieved_percentage: 'kpi_achieved_percentage',
  competency_name: 'competency_name',
  competency_rating: 'competency_rating',
  competency_remarks: 'competency_remarks',
  achievements: 'achievements',
  a_o_improve: 'a_o_improve',
  overall_rating: 'overall_rating',
  revised_ctc: 'revised_ctc',
  new_designation_id: 'new_designation_id',
  bonus: 'bonus',
  goals: 'goals'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  power: 'power',
  name: 'name'
};

exports.Prisma.Kpi_targetScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  target: 'target',
  kpi_id: 'kpi_id'
};

exports.Prisma.Admin_actionsScalarFieldEnum = {
  action_id: 'action_id',
  badge_id: 'badge_id',
  admin_id: 'admin_id',
  action: 'action',
  created_at: 'created_at'
};

exports.Prisma.BadgesScalarFieldEnum = {
  badge_id: 'badge_id',
  user_id: 'user_id',
  status: 'status',
  comment: 'comment',
  created_at: 'created_at',
  receiver_id: 'receiver_id',
  lastupdated_by: 'lastupdated_by',
  reason: 'reason'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  departments: 'departments',
  designations: 'designations',
  employees: 'employees',
  kpi_frequencies: 'kpi_frequencies',
  kpi_periods: 'kpi_periods',
  kpi_values: 'kpi_values',
  kpis: 'kpis',
  credentials: 'credentials',
  manager_review: 'manager_review',
  appraisal: 'appraisal',
  roles: 'roles',
  kpi_target: 'kpi_target',
  admin_actions: 'admin_actions',
  badges: 'badges'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Dell_Owner\\Documents\\GitHub\\BizDateUp-Kpi-App\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Dell_Owner\\Documents\\GitHub\\BizDateUp-Kpi-App\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel departments {\n  id           Int            @id @default(autoincrement())\n  name         String?        @unique @db.VarChar\n  designations designations[]\n  employees    employees[]\n}\n\nmodel designations {\n  id            Int          @id @default(autoincrement())\n  name          String?      @unique @db.VarChar\n  department_id Int?\n  departments   departments? @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_designations_department\")\n  employees     employees[]\n  kpis          kpis[]\n}\n\nmodel employees {\n  id                                      Int              @id @default(autoincrement())\n  employee_id                             String?          @unique @db.VarChar\n  name                                    String           @db.VarChar\n  department_id                           Int?\n  designation_id                          Int?\n  company                                 String?          @db.VarChar\n  employee_type                           String?          @db.VarChar\n  phone                                   String?          @db.VarChar\n  email                                   String?          @db.VarChar\n  image                                   String?          @db.VarChar\n  status                                  String?          @db.VarChar\n  role_id                                 Int?\n  admin_actions                           admin_actions[]\n  appraisal                               appraisal[]\n  badges_badges_lastupdated_byToemployees badges[]         @relation(\"badges_lastupdated_byToemployees\")\n  badges_badges_receiver_idToemployees    badges[]         @relation(\"badges_receiver_idToemployees\")\n  badges_badges_user_idToemployees        badges[]         @relation(\"badges_user_idToemployees\")\n  departments                             departments?     @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_employees_department\")\n  designations                            designations?    @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_employees_designation\")\n  roles                                   roles?           @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_employees_role\")\n  kpi_target                              kpi_target[]\n  kpi_values                              kpi_values[]\n  manager_review                          manager_review[]\n}\n\nmodel kpi_frequencies {\n  id          Int           @id @default(autoincrement())\n  name        String?       @unique @db.VarChar\n  kpi_periods kpi_periods[]\n  kpis        kpis[]\n}\n\nmodel kpi_periods {\n  id              Int              @id @default(autoincrement())\n  frequency_id    Int?\n  year            Int\n  month           Int?\n  quarter         Int?\n  start_date      DateTime?        @db.Date\n  end_date        DateTime?        @db.Date\n  kpi_frequencies kpi_frequencies? @relation(fields: [frequency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpi_periods_frequency\")\n  kpi_values      kpi_values[]\n}\n\nmodel kpi_values {\n  id             Int          @id @default(autoincrement())\n  kpi_id         Int?\n  employee_id    Int?\n  period_id      Int?\n  value_achieved Float\n  employees      employees?   @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpi_values_employee\")\n  kpis           kpis?        @relation(fields: [kpi_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpi_values_kpi\")\n  kpi_periods    kpi_periods? @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpi_values_period\")\n}\n\nmodel kpis {\n  id               Int              @id @default(autoincrement())\n  title            String           @db.VarChar\n  description      String?\n  frequency_id     Int?\n  target           Float?\n  designation_id   Int?\n  green_threshold  Float?\n  yellow_threshold Float?\n  kpi_target       kpi_target[]\n  kpi_values       kpi_values[]\n  designations     designations?    @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpis_designation\")\n  kpi_frequencies  kpi_frequencies? @relation(fields: [frequency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpis_frequency\")\n}\n\nmodel credentials {\n  id       Int    @id @default(autoincrement())\n  email    String @unique @db.VarChar\n  passhash String @db.VarChar\n}\n\nmodel manager_review {\n  id           Int        @id @default(autoincrement())\n  review_date  DateTime?  @db.Timestamptz(6)\n  manager_name String?    @db.VarChar\n  employee_id  Int?\n  summary_kpi  String?\n  strengths    String?\n  improvement  String?\n  comment      String?\n  actions      String[]\n  goals        String?\n  rating       Int?\n  employees    employees? @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_manager_review_employee\")\n}\n\n/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.\nmodel appraisal {\n  id                      Int       @id @default(autoincrement())\n  employee_id             Int\n  start                   DateTime  @db.Date\n  end                     DateTime  @db.Date\n  manager_name            String    @db.VarChar\n  review_date             DateTime  @db.Date\n  kpi_achieved_percentage Float     @db.Real\n  competency_name         String[]\n  competency_rating       Int[]\n  competency_remarks      String[]\n  achievements            String?   @default(\"\")\n  a_o_improve             String?   @default(\"\")\n  overall_rating          Int?      @default(0)\n  revised_ctc             Float?    @db.Real\n  new_designation_id      Int?\n  bonus                   Float?    @db.Real\n  goals                   String?\n  employees               employees @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_appraisal_employee\")\n}\n\n/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.\nmodel roles {\n  id        Int         @id @default(autoincrement())\n  power     Int?        @default(0)\n  name      String      @db.VarChar\n  employees employees[]\n}\n\n/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.\nmodel kpi_target {\n  id          Int       @id @default(autoincrement())\n  employee_id Int\n  target      Decimal?  @db.Decimal\n  kpi_id      Int\n  employees   employees @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_kpi_target_employee\")\n  kpis        kpis      @relation(fields: [kpi_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_kpi_target_kpi\")\n}\n\nmodel admin_actions {\n  action_id  Int       @id @default(autoincrement())\n  badge_id   Int\n  admin_id   Int\n  action     String    @db.VarChar(20)\n  created_at DateTime  @default(now()) @db.Timestamp(6)\n  employees  employees @relation(fields: [admin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  badges     badges    @relation(fields: [badge_id], references: [badge_id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel badges {\n  badge_id                                   Int             @id @default(autoincrement())\n  user_id                                    Int\n  status                                     String          @default(\"pending\") @db.VarChar(20)\n  comment                                    String\n  created_at                                 DateTime        @default(now()) @db.Timestamptz(6)\n  receiver_id                                Int\n  lastupdated_by                             Int?\n  reason                                     String?\n  admin_actions                              admin_actions[]\n  employees_badges_lastupdated_byToemployees employees?      @relation(\"badges_lastupdated_byToemployees\", fields: [lastupdated_by], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  employees_badges_receiver_idToemployees    employees       @relation(\"badges_receiver_idToemployees\", fields: [receiver_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  employees_badges_user_idToemployees        employees       @relation(\"badges_user_idToemployees\", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n",
  "inlineSchemaHash": "33fc53e5c4d77b8d80fd38dc627ac58e55b74cdecf2a89bc3670ae10930d65fe",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"departments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designations\",\"kind\":\"object\",\"type\":\"designations\",\"relationName\":\"departmentsTodesignations\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"departmentsToemployees\"}],\"dbName\":null},\"designations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"departments\",\"kind\":\"object\",\"type\":\"departments\",\"relationName\":\"departmentsTodesignations\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"designationsToemployees\"},{\"name\":\"kpis\",\"kind\":\"object\",\"type\":\"kpis\",\"relationName\":\"designationsTokpis\"}],\"dbName\":null},\"employees\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"designation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_actions\",\"kind\":\"object\",\"type\":\"admin_actions\",\"relationName\":\"admin_actionsToemployees\"},{\"name\":\"appraisal\",\"kind\":\"object\",\"type\":\"appraisal\",\"relationName\":\"appraisalToemployees\"},{\"name\":\"badges_badges_lastupdated_byToemployees\",\"kind\":\"object\",\"type\":\"badges\",\"relationName\":\"badges_lastupdated_byToemployees\"},{\"name\":\"badges_badges_receiver_idToemployees\",\"kind\":\"object\",\"type\":\"badges\",\"relationName\":\"badges_receiver_idToemployees\"},{\"name\":\"badges_badges_user_idToemployees\",\"kind\":\"object\",\"type\":\"badges\",\"relationName\":\"badges_user_idToemployees\"},{\"name\":\"departments\",\"kind\":\"object\",\"type\":\"departments\",\"relationName\":\"departmentsToemployees\"},{\"name\":\"designations\",\"kind\":\"object\",\"type\":\"designations\",\"relationName\":\"designationsToemployees\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"roles\",\"relationName\":\"employeesToroles\"},{\"name\":\"kpi_target\",\"kind\":\"object\",\"type\":\"kpi_target\",\"relationName\":\"employeesTokpi_target\"},{\"name\":\"kpi_values\",\"kind\":\"object\",\"type\":\"kpi_values\",\"relationName\":\"employeesTokpi_values\"},{\"name\":\"manager_review\",\"kind\":\"object\",\"type\":\"manager_review\",\"relationName\":\"employeesTomanager_review\"}],\"dbName\":null},\"kpi_frequencies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kpi_periods\",\"kind\":\"object\",\"type\":\"kpi_periods\",\"relationName\":\"kpi_frequenciesTokpi_periods\"},{\"name\":\"kpis\",\"kind\":\"object\",\"type\":\"kpis\",\"relationName\":\"kpi_frequenciesTokpis\"}],\"dbName\":null},\"kpi_periods\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"frequency_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quarter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kpi_frequencies\",\"kind\":\"object\",\"type\":\"kpi_frequencies\",\"relationName\":\"kpi_frequenciesTokpi_periods\"},{\"name\":\"kpi_values\",\"kind\":\"object\",\"type\":\"kpi_values\",\"relationName\":\"kpi_periodsTokpi_values\"}],\"dbName\":null},\"kpi_values\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kpi_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"period_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value_achieved\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"employeesTokpi_values\"},{\"name\":\"kpis\",\"kind\":\"object\",\"type\":\"kpis\",\"relationName\":\"kpi_valuesTokpis\"},{\"name\":\"kpi_periods\",\"kind\":\"object\",\"type\":\"kpi_periods\",\"relationName\":\"kpi_periodsTokpi_values\"}],\"dbName\":null},\"kpis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"target\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"designation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"green_threshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yellow_threshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"kpi_target\",\"kind\":\"object\",\"type\":\"kpi_target\",\"relationName\":\"kpi_targetTokpis\"},{\"name\":\"kpi_values\",\"kind\":\"object\",\"type\":\"kpi_values\",\"relationName\":\"kpi_valuesTokpis\"},{\"name\":\"designations\",\"kind\":\"object\",\"type\":\"designations\",\"relationName\":\"designationsTokpis\"},{\"name\":\"kpi_frequencies\",\"kind\":\"object\",\"type\":\"kpi_frequencies\",\"relationName\":\"kpi_frequenciesTokpis\"}],\"dbName\":null},\"credentials\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passhash\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"manager_review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"manager_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"summary_kpi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strengths\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"improvement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goals\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"employeesTomanager_review\"}],\"dbName\":null},\"appraisal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"manager_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"review_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kpi_achieved_percentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"competency_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"competency_rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"competency_remarks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"achievements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"a_o_improve\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"overall_rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"revised_ctc\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"new_designation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bonus\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"goals\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"appraisalToemployees\"}],\"dbName\":null},\"roles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"power\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"employeesToroles\"}],\"dbName\":null},\"kpi_target\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"target\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"kpi_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"employeesTokpi_target\"},{\"name\":\"kpis\",\"kind\":\"object\",\"type\":\"kpis\",\"relationName\":\"kpi_targetTokpis\"}],\"dbName\":null},\"admin_actions\":{\"fields\":[{\"name\":\"action_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"badge_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"admin_actionsToemployees\"},{\"name\":\"badges\",\"kind\":\"object\",\"type\":\"badges\",\"relationName\":\"admin_actionsTobadges\"}],\"dbName\":null},\"badges\":{\"fields\":[{\"name\":\"badge_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiver_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastupdated_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_actions\",\"kind\":\"object\",\"type\":\"admin_actions\",\"relationName\":\"admin_actionsTobadges\"},{\"name\":\"employees_badges_lastupdated_byToemployees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"badges_lastupdated_byToemployees\"},{\"name\":\"employees_badges_receiver_idToemployees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"badges_receiver_idToemployees\"},{\"name\":\"employees_badges_user_idToemployees\",\"kind\":\"object\",\"type\":\"employees\",\"relationName\":\"badges_user_idToemployees\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

